/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Account {
  id: Generated<number>;
  name: string;
}

export interface FederatedCredential {
  account_id: number;
  id: Generated<number>;
  provider: string;
  subject: string;
}

export interface Friend {
  id: Generated<number>;
  name: string;
  owner_id: number;
}

export interface FriendHangout {
  friend_id: number;
  hangout_id: number;
}

export interface Hangout {
  description: string;
  hangout_date: Timestamp;
  id: Generated<number>;
  owner_id: number;
  title: string;
}

export interface DB {
  account: Account;
  federated_credential: FederatedCredential;
  friend: Friend;
  friend_hangout: FriendHangout;
  hangout: Hangout;
}
